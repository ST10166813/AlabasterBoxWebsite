@model List<Alabaster.Models.UpcomingEvent>

@{
    ViewData["Title"] = "Upcoming Events";
}

<style>
/* =============== GLOBAL =============== */
body {
    font-family: 'Poppins', 'Segoe UI', sans-serif;
    background: url('../images/cross7.png') center -10% / cover no-repeat fixed;
    background-color: #000;
    color: #fff;
    min-height: 100vh;
    overflow-x: hidden;
    position: relative;
}

/* PAGE WRAPPER */
.page-overlay {
    padding: 80px 15px;
    position: auto;
    z-index: 1;
}

.page-overlay::before {
    content: "";
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.45);
    z-index: -1;
}

/* HEADING ‚Äî GOLD BOX + SHIMMER */
.page-overlay h2 {
    font-size: 3.8rem;
    font-weight: 900;
    text-align: center;
    margin-bottom: 50px;
    letter-spacing: 2px;
    text-transform: uppercase;
    position: relative;
    display: inline-block;
    padding: 1rem 2.5rem;
    border-radius: 20px;
    border: 2px solid #FFD700;
    background: rgba(0, 0, 0, 0.6);
    box-shadow: 0 0 20px #FFD700, 0 0 50px rgba(255, 215, 0, 0.5);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    
    /* Shimmer effect */
    background-image: linear-gradient(90deg, #FFD700, #ffffff, #FFD700);
    -webkit-background-clip: text;
    color: transparent;
    background-clip: text;
    background-size: 200% auto;
    animation: shimmer 5s linear infinite;
    text-shadow: 0 0 35px rgba(255, 255, 255, 0.4);
}

.page-overlay h2:hover {
    transform: scale(1.05);
    box-shadow: 0 0 40px #FFD700, 0 0 80px rgba(255,215,0,0.6);
}

@@keyframes shimmer {
    0% { background-position: 0% 50%; }
    100% { background-position: 200% 50%; }
}

/* TOP BUTTONS */
.top-buttons {
    display: flex;
    justify-content: space-between;
    margin-bottom: 40px;
}

.top-buttons a {
    border-radius: 30px;
    font-weight: 700;
    padding: 14px 28px;
    font-size: 1.1rem;
    text-transform: uppercase;
    transition: all 0.3s ease;
    text-decoration: none;
    color: #fff;
    box-shadow: 0 0 15px rgba(0, 198, 255, 0.4);
}

/* ADD EVENT BUTTON */
.btn-primary {
    background: linear-gradient(135deg, #0072ff, #00c6ff);
    border: none;
    color: #fff;
    font-weight: 700;
    box-shadow: 0 8px 25px rgba(0, 198, 255, 0.4);
    padding: 14px 28px;
    border-radius: 30px;
    text-transform: uppercase;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 10px 30px rgba(0, 198, 255, 0.6);
    color: #fff;
}

/* VIEW PAST EVENTS BUTTON */
.btn-warning {
    background: linear-gradient(135deg, #FFD700, #FFCC33);
    border: none;
    color: #000 !important;
    font-weight: 700;
    box-shadow: 0 8px 25px rgba(255, 215, 0, 0.4);
    padding: 14px 28px;
    border-radius: 30px;
    text-transform: uppercase;
    transition: all 0.3s ease;
}

.btn-warning:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 10px 30px rgba(255, 220, 50, 0.6);
    color: #000 !important;
}

/* EVENT CARDS */
.event-card {
    border: none;
    border-radius: 20px;
    background: rgba(255, 255, 255, 0.12);
    backdrop-filter: blur(18px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.25);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.7);
    overflow: hidden;
    transition: all 0.4s ease;
    transform: translateY(20px);
    opacity: 0;
}

.event-card.visible {
    transform: translateY(0);
    opacity: 1;
    transition: all 0.7s ease;
}

.event-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 25px 50px rgba(255, 255, 255, 0.2);
}

/* IMAGE */
.image-wrapper {
    position: relative;
    width: 100%;
    padding-top: 65%;
    overflow: hidden;
}

.image-wrapper img {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.5s ease;
    filter: brightness(0.9) contrast(1.1);
}

.event-card:hover img {
    transform: scale(1.08);
    filter: brightness(1.05);
}

/* CARD BODY */
.card-body {
    padding: 25px;
    text-align: left;
}

.card-body h5 {
    font-size: 1.9rem;
    font-weight: 900;
    margin-bottom: 20px;
    color: #FFD700;
    text-shadow: 0 0 12px rgba(255,215,0,0.6);
    text-align: center;
}

.card-body p {
    font-size: 1.2rem;
    color: #f1f1f1;
    line-height: 1.8;
    margin-bottom: 12px;
}

.card-body strong {
    color: #FFD700;
}

/* VOLUNTEER BUTTON */
.btn-custom {
    display: inline-block;
    width: 100%;
    text-align: center;
    background: linear-gradient(135deg, #ffb347, #ffcc33);
    border: none;
    border-radius: 35px;
    padding: 14px 0;
    font-weight: 800;
    font-size: 1.15rem;
    color: #111;
    transition: all 0.3s ease;
    margin-top: 12px;
    text-transform: uppercase;
    box-shadow: 0 8px 25px rgba(255, 200, 0, 0.4);
}

.btn-custom:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 10px 30px rgba(255, 220, 50, 0.6);
}

/* RESPONSIVE */
@@media (max-width: 992px) {
    .page-overlay h2 { font-size: 3rem; }
    .card-body h5 { font-size: 1.7rem; }
    .card-body p { font-size: 1.15rem; }
}

@@media (max-width: 768px) {
    .page-overlay h2 { font-size: 2.5rem; }
    .card-body h5 { font-size: 1.5rem; }
    .card-body p { font-size: 1.1rem; }
}

/* SPARKLES */
.sparkle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: rgba(255, 215, 0, 0.9);
    border-radius: 50%;
    box-shadow: 0 0 8px rgba(255, 215, 0, 0.8);
    pointer-events: none;
    animation: sparkleAnim linear infinite;
    z-index: 0;
}

@@keyframes sparkleAnim {
    0% { transform: translateY(0) scale(0.5); opacity: 0; }
    50% { transform: translateY(-25px) scale(1); opacity: 1; }
    100% { transform: translateY(-50px) scale(0.5); opacity: 0; }
}
</style>

@section Scripts {
<script>
/* Fade-in observer for event cards */
const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        if(entry.isIntersecting) entry.target.classList.add('visible');
    });
}, { threshold: 0.2 });

document.querySelectorAll('.event-card').forEach(card => observer.observe(card));

/* Sparkles effect */
function createSparkle() {
    const sparkle = document.createElement('div');
    sparkle.classList.add('sparkle');
    sparkle.style.left = Math.random() * window.innerWidth + 'px';
    sparkle.style.top = Math.random() * window.innerHeight + 'px';
    sparkle.style.animationDuration = (5 + Math.random() * 5) + 's';
    document.body.appendChild(sparkle);
    setTimeout(() => sparkle.remove(), 10000);
}

setInterval(createSparkle, 200);
</script>
}

<div class="page-overlay text-center">
    <div class="container">
        <h2>‚ú® Upcoming Events ‚ú®</h2>

        <div class="top-buttons d-flex justify-content-between">
            @if (Context.Session.GetString("IsAdmin") == "true")
            {
                <a href="@Url.Action("AddEvent", "Events")" class="btn btn-primary">‚ûï Add Event</a>
            }
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="row">
                @foreach (var evt in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card event-card">
                            @if (!string.IsNullOrEmpty(evt.ImageUrl))
                            {
                                <div class="image-wrapper">
                                    <img src="@evt.ImageUrl" alt="@evt.Name" />
                                </div>
                            }
                            <div class="card-body">
                                <h5>@evt.Name</h5>
                                <p>@evt.Description</p>
                                <p><strong>Date:</strong> @(DateTime.TryParse(evt.Date, out var dt) ? dt.ToString("MMMM dd, yyyy") : evt.Date)</p>
                                <p><strong>Time:</strong> @evt.Time</p>

                                <a href="@(Context.Session.GetString("UserId") != null 
                                            ? Url.Action("Volunteer", "Events", new { eventId = evt.Id }) 
                                            : Url.Action("Login", "Auth"))" 
                                   class="btn btn-custom">
                                    ü§ù Volunteer
                                </a>

                                @if (Context.Session.GetString("IsAdmin") == "true")
                                {
                                    <form asp-action="DeleteEvent" method="post" style="display:inline;">
                                        <input type="hidden" name="eventId" value="@evt.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm mt-2" onclick="return confirm('Are you sure you want to delete this event?');">
                                            üóë Delete
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info text-center">
                No upcoming events available at the moment.
            </div>
        }
    </div>
</div>
