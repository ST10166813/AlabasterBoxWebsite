@{
    ViewData["Title"] = "Register";
}

<style>
/* === BODY & BACKGROUND === */
body {
    font-family: 'Poppins', 'Segoe UI', sans-serif;
    background: url('../images/login3.png') center 150% / cover no-repeat fixed;
    background-color: #000;
    color: #fff;
    min-height: 100vh;
    overflow-x: hidden;
    position: relative;
}

body::before {
    content: "";
    position: fixed;
    top: 0; left: 0; width: 100%; height: 100%;
    background: rgba(0,0,0,0.3);
    z-index: 0;
}

/* === MAIN WRAPPER === */
.main-wrapper {
    position: relative;
    z-index: 1;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    min-height: 100vh;
    padding-top: 70px;
    padding-bottom: 40px;
    padding-right: 6%;
    animation: fadeIn 1s ease forwards;
}

@@keyframes fadeIn {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
}

/* === AUTH CARD === */
.auth-container {
    display: flex;
    background-color: #fff;
    border-radius: 23px;
    box-shadow: 0 18px 38px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    max-width: 770px;
    width: 100%;
    min-height: 540px;
    transform: scale(1.05);
    transition: transform 0.4s ease, box-shadow 0.4s ease;
    margin-top: 50px;
}

.auth-container:hover {
    transform: scale(1.07) translateY(-5px);
    box-shadow: 0 28px 60px rgba(0, 0, 0, 0.4);
}

/* === FORM SIDE === */
.auth-form {
    padding: 48px 48px;
    flex: 1;
    animation: fadeInForm 1s ease forwards;
}

@@keyframes fadeInForm {
    from { opacity: 0; transform: translateX(-20px);}
    to { opacity: 1; transform: translateX(0);}
}

.auth-image {
    flex: 1;
    background: url('@Url.Content("~/Images/logo.jpg")') center center no-repeat;
    background-size: contain;
    background-color: #ffffff;
    min-height: 540px;
    padding: 24px;
    border-left: 1px solid #e5e7eb;
}

/* === TITLES === */
.auth-title {
    font-size: 28px;
    font-weight: 900;
    color: #8a1e1e;
    margin-bottom: 24px;
    text-align: center;
    opacity: 0;
    animation: fadeInText 1s ease 0.3s forwards;
}

@@keyframes fadeInText {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* === LABELS & INPUTS === */
label.form-label {
    font-weight: 700;
    font-size: 1rem;
    color: #000;
}

input.form-control {
    font-size: 0.9rem;
    padding: 10px 12px;
    border-radius: 8px;
    transition: all 0.3s ease;
}

input.form-control:focus {
    border-color: #6366f1;
    box-shadow: 0 0 12px rgba(99,102,241,0.6);
    transform: scale(1.01);
}

/* === BUTTONS === */
button.btn-primary, button.btn-success {
    background: linear-gradient(135deg, #FFD700, #FFB700, #FFD700); /* gold-orange gradient */
    border: none;
    font-size: 0.9rem;
    padding: 10px 0;
    border-radius: 10px;
    font-weight: 700;
    transition: all 0.3s ease;
    color: #000; /* black text for contrast */
    box-shadow: 0 5px 12px rgba(255,215,0,0.4);
}

button.btn-primary:hover,
button.btn-success:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 20px rgba(255,215,0,0.6);
}

/* === LINKS & TEXT === */
.link-custom {
    color: #4f46e5;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.9rem;
    transition: color 0.3s ease;
}

.link-custom:hover {
    color: #1e3a8a;
    text-decoration: underline;
}

.text-center {
    text-align: center;
    font-size: 0.85rem;
    margin-top: 16px;
}

.alert {
    font-size: 0.75rem;
    margin-bottom: 14px;
    padding: 10px 14px;
    border-radius: 7px;
    animation: fadeInAlert 0.6s ease forwards;
}

@@keyframes fadeInAlert {
    from { opacity: 0; transform: translateY(-5px); }
    to { opacity: 1; transform: translateY(0); }
}

hr {
    margin: 30px 0 24px;
    border-color: #ddd;
    border-width: 1px;
}

/* === RESPONSIVE === */
@@media (max-width: 768px) {
    .main-wrapper { justify-content: center; padding-right: 0; }
    .auth-container { flex-direction: column; max-width: 90vw; min-height: auto; transform: none; }
    .auth-image { height: 245px; border-left: none; border-top: 1px solid #e5e7eb; padding: 14px; min-height: auto; }
    .auth-form { padding: 28px 21px; }
    .auth-title { font-size: 22px; margin-bottom: 18px; }
    label.form-label, .link-custom, .text-center { font-size: 0.85rem; }
    input.form-control { font-size: 0.85rem; padding: 9px 10px; }
    button.btn-primary, button.btn-success { font-size: 0.85rem; padding: 8px 0; }
}
.text-center a.link-custom {
    font-size: 1rem;  /* slightly bigger */
    font-weight: 700;  /* bold */
}
</style>

<div class="main-wrapper">
    <div class="auth-container">
        <div class="auth-form">
            <h3 class="auth-title">Create Your Account üìù</h3>

            @if (!string.IsNullOrEmpty(ViewBag.Error as string))
            {
                <div class="alert alert-danger">@ViewBag.Error</div>
            }

            <form method="post">
                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <input type="email" name="email" id="email" class="form-control" placeholder="Enter your email" required />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Password</label>
                    <input type="password" name="password" id="password" class="form-control" placeholder="Enter your password" required />
                    <small class="text-muted">Password must have uppercase, lowercase, number, and special character.</small>
                </div>
                <button type="submit" class="btn btn-primary w-100">Register</button>
            </form>

            <div class="text-center mt-3">
                <span class="text-muted">Already have an account?
                    <a class="link-custom" href="/Auth/Login">Login</a>
                </span>
            </div>

            <hr />
            <button id="google-signin-btn" class="btn btn-danger w-100 mt-3">
                <i class="bi bi-google"></i> Sign in with Google
            </button>
        </div>

        <div class="auth-image d-none d-md-block"></div>
    </div>
</div>

@section Scripts {
<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
    import { getAuth, GoogleAuthProvider, signInWithPopup } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";

    const firebaseConfig = {
        apiKey: "AIzaSyBEjxaEf_S9x9NZhmJrWwHLDdZvoyDajDg",
        authDomain: "alabaster-8cfcd.firebaseapp.com",
        projectId: "alabaster-8cfcd",
        storageBucket: "alabaster-8cfcd.appspot.com",
        messagingSenderId: "1014314025942",
        appId: "1:1014314025942:web:fedff22641b2b8bd219a77"
    };

    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const provider = new GoogleAuthProvider();
    provider.setCustomParameters({ prompt: 'select_account' });

    document.getElementById("google-signin-btn").addEventListener("click", async () => {
        try {
            const result = await signInWithPopup(auth, provider);
            const idToken = await result.user.getIdToken();

            const resp = await fetch("/Auth/GoogleLogin", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(idToken)
            });

            const data = await resp.json();
            if (data.success) { window.location.href = "/Home/Index"; }
            else { alert("Google Login failed: " + data.error); }
        } catch (err) { alert("Google Sign-In Error: " + err.message); }
    });
</script>
}
